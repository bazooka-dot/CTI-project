---
- name: Check if existing honeypots are present
  stat:
    path: "{{ item }}"
  loop:
    - "{{ honeypot_cowrie_dir }}/docker-compose.yml"
    - "{{ honeypot_http_dir }}/docker-compose.yml"
  register: honeypot_files

- name: Verify all honeypot files exist
  assert:
    that:
      - item.stat.exists
    fail_msg: "Honeypot file {{ item.item }} not found on target machine"
    success_msg: "Found honeypot file {{ item.item }}"
  loop: "{{ honeypot_files.results }}"

- name: Include Docker verification tasks
  include_tasks: docker.yml

- name: Stop existing honeypot containers (cleanup)
  shell: |
    cd {{ honeypot_cowrie_dir }} && {{ docker_compose_cmd }} down --remove-orphans || true
    cd {{ honeypot_http_dir }} && {{ docker_compose_cmd }} down --remove-orphans || true
  become_user: "{{ honeypot_user }}"
  ignore_errors: yes

- name: Pull latest honeypot images
  shell: |
    cd {{ item }} && {{ docker_compose_cmd }} pull || true
  loop:
    - "{{ honeypot_cowrie_dir }}"
    - "{{ honeypot_http_dir }}"
  become_user: "{{ honeypot_user }}"
  ignore_errors: yes

- name: Start Cowrie SSH/Telnet honeypot
  shell: |
    cd {{ honeypot_cowrie_dir }}
    {{ docker_compose_cmd }} up -d
  become_user: "{{ honeypot_user }}"
  register: cowrie_deploy_result

- name: Start HTTP honeypot
  shell: |
    cd {{ honeypot_http_dir }}
    {{ docker_compose_cmd }} up -d
  become_user: "{{ honeypot_user }}"
  register: http_deploy_result

- name: Wait for containers to start
  pause:
    seconds: 20

- name: Verify Cowrie containers are running
  shell: |
    cd {{ honeypot_cowrie_dir }}
    {{ docker_compose_cmd }} ps
  become_user: "{{ honeypot_user }}"
  register: cowrie_status

- name: Verify HTTP containers are running
  shell: |
    cd {{ honeypot_http_dir }}
    {{ docker_compose_cmd }} ps
  become_user: "{{ honeypot_user }}"
  register: http_status

- name: Display deployment results
  debug:
    msg:
      - "Docker Compose Command Used: {{ docker_compose_cmd }}"
      - "Cowrie Deployment: {{ 'SUCCESS' if cowrie_deploy_result.rc == 0 else 'FAILED' }}"
      - "HTTP Deployment: {{ 'SUCCESS' if http_deploy_result.rc == 0 else 'FAILED' }}"
      - "Cowrie Status: {{ cowrie_status.stdout_lines }}"
      - "HTTP Status: {{ http_status.stdout_lines }}"